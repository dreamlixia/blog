(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{490:function(e,t,a){"use strict";a.r(t);var r=a(27),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"手写object-create"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写object-create"}},[e._v("#")]),e._v(" 手写Object.create")]),e._v(" "),a("p",[e._v("思路：将传入的对象作为原型")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function create(obj) {\n    function F() {}\n    f.prototype = obj\n    return new F()\n}\n")])])]),a("h2",{attrs:{id:"防抖-debounce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防抖-debounce"}},[e._v("#")]),e._v(" 防抖(debounce)")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://dreamlixia.github.io/blog/#/src/%E9%9D%A2%E8%AF%95%E9%A2%98/JavaScript.html#%E9%98%B2%E6%8A%96-debounce",target:"_blank",rel:"noopener noreferrer"}},[e._v("本博客面试题模块有解析"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("不管事件的触发频率有多高，一定在事件触发后的n秒后才执行，如果在n秒内再次触发了事件，那么以新的时间为准，n秒后再执行。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function debounce(event, time) {\n    let timer = null\n    return function(...args) {\n        if(timer) clearTimeout(timer)\n        timer = setTimeout(() => {\n            event.apply(this, args)\n        }, time)\n    }\n}\n")])])]),a("p",[e._v("有时候需要立即执行一次，再等后面事件触发后等待n秒执行。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function debounce1(event, time) {\n    let timer = null\n    let flag = true\n    return function(...args) {\n        if(flag && !timer) {\n            event.apply(this, args)\n            flag = false\n        }\n        if(timer) clearTimeout(timer)\n        timer = setTimeout(() => {\n            event.apply(this, args)\n        }, time)\n    }\n}\n")])])]),a("h2",{attrs:{id:"节流-throttle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节流-throttle"}},[e._v("#")]),e._v(" 节流(throttle)")]),e._v(" "),a("p",[e._v("不管事件的触发频率有多高，只在单位时间内执行一次。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function throttle(event, time) {\n    let timer = null\n    return function(...args) {\n        if(!timer) {\n            timer = setTimeout(() => {\n                clearTimeout(timer)\n                event.apply(this, args)\n            }, time)\n        }\n    }\n}\n")])])]),a("p",[e._v("时间戳方式 ？")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("function throttleTime(event, time) {\n    let prev = 0\n    let timer = null\n    return function(...args) {\n        if(Date.now() - prev > time) {\n            clearTimeout(timer)\n            event.apply(this, args)\n            prev = Date.now()\n        } else if(!timer) {\n            timer = setTimeout(() => {\n                clearTimeout(timer)\n                event.apply(this, args)\n            }, time)\n        }\n    }\n}\n")])])]),a("h2",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[e._v("#")]),e._v(" Promise")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const PENDING = 'pending'\nconst FULFILLED = 'fulfilled'\nconst REJECTED = 'rejected'\n\nfunction MyPromise(executor) {\n    this.state = PENDING\n    this.value = null\n    this.reason = null\n\n    const resolve = (value) => {\n        if(this.state == PENDING) {\n            this.state = FULFILLED\n            this.value = value\n        }\n    }\n    const reject = (reason) => {\n        if(this.state == PENDING) {\n            this.state = REJECTED\n            this.reason = reason\n        }\n    }\n\n    try {\n        executor && executor(resolve, reject)\n    } catch (reason) {\n        reject(reason)\n    }\n}\n")])])]),a("h2",{attrs:{id:"原生xhr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原生xhr"}},[e._v("#")]),e._v(" 原生xhr")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])])]),a("h2",{attrs:{id:"深浅拷贝"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#深浅拷贝"}},[e._v("#")]),e._v(" 深浅拷贝")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])])]),a("h2",{attrs:{id:"异步循环打印"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步循环打印"}},[e._v("#")]),e._v(" 异步循环打印")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])])]),a("h2",{attrs:{id:"call、apply、bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call、apply、bind"}},[e._v("#")]),e._v(" call、apply、bind")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://www.nowcoder.com/profile/539362727/codeBookDetail?submissionId=118943499",target:"_blank",rel:"noopener noreferrer"}},[e._v("牛客题解"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])])]),a("h2",{attrs:{id:"快排"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快排"}},[e._v("#")]),e._v(" 快排")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])])]),a("h2",{attrs:{id:"去重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#去重"}},[e._v("#")]),e._v(" 去重")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])])]),a("h2",{attrs:{id:"数组扁平化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组扁平化"}},[e._v("#")]),e._v(" 数组扁平化")]),e._v(" "),a("p",[e._v("递归、reduce")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])])]),a("h2",{attrs:{id:"reduce使用场景-6种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reduce使用场景-6种"}},[e._v("#")]),e._v(" reduce使用场景(6种)")]),e._v(" "),a("p",[e._v("求和、求乘积、去重、计算元素在数组中出现的次数、将二维或多维数组转化成一维数组、数组对象里的属性求和")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://dreamlixia.github.io/blog/#/src/%E5%89%8D%E7%AB%AF/JS/ES6%E6%8A%80%E5%B7%A7/reduce.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("本博客前端JS模块有解析"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("求和")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const arr = [1,2,3,4,5]\nlet sum = arr.reduce((pre, next) => {\n    return pre + next\n}, 0)\nconsole.log(sum) // 15\n")])])]),a("p",[e._v("求乘积")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const arr = [1,2,3,4,5]\nlet product = arr.reduce((pre, next) => {\n    return pre * next\n})\nconsole.log(product) // 120\n")])])]),a("p",[e._v("去重")]),e._v(" "),a("div",{staticClass:"language-const arr1 = [1,1,2,3,4,5,5,6] extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const single = arr1.reduce((pre, cur) => {\n    if(!pre.includes(cur)){\n        return pre.concat(cur)\n    } else {\n        return pre\n    }\n}, [])\nconsole.log(single) // [1, 2, 3, 4, 5, 6]\n")])])]),a("p",[e._v("计算元素在数组中出现的次数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let nums = arr1.reduce((pre, next) => {\n    if(next in pre) {\n        pre[next] ++\n    } else {\n        pre[next] = 1\n    }\n    return pre\n}, {})\nconsole.log(nums) // {1: 2, 2: 1, 3: 1, 4: 1, 5: 2, 6: 1}\n")])])]),a("p",[e._v("多维数组转化成一维数组")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const arr2 = [1,2,[3,[4,[5],6]],7]\nlet flat = function(arr) {\n    return arr.reduce((pre, next) => pre.concat(Array.isArray(next) ? flat(next) : next), [])\n}\nconsole.log(flat(arr2)) // [1, 2, 3, 4, 5, 6, 7]\n")])])]),a("p",[e._v("二维数组转化成一维数组")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const arr3 = [[1,2],[3,4],[5,6]]\nconst result = function(arr) {\n    return arr.reduce((pre, next) => pre.concat(next))\n}\nconsole.log(result(arr3)) // [1, 2, 3, 4, 5, 6]\n")])])]),a("p",[e._v("数组对象里的属性求和")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("let arrObj = [\n    { name: 'name1', age: 10 },\n    { name: 'name2', age: 20 },\n    { name: 'name3', age: 30 },\n    { name: 'name4', age: 40 },\n]\nlet sums = function(arr, param) {\n    return arr.reduce((pre, next) => (pre + next[param]), 0)\n}\nconsole.log(sums(arrObj, 'age')) // 100\n")])])]),a("h2",{attrs:{id:"斐波那契数列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#斐波那契数列"}},[e._v("#")]),e._v(" 斐波那契数列")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof/",target:"_blank",rel:"noopener noreferrer"}},[e._v("力扣原题"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。")]),e._v(" "),a("p",[e._v("0,1,1,2,3,5,8,13,21,34,…… 从第三项开始，每一项都等于前两项之和。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("var fib = function(n) {\n    let data = 1000000007;\n    if(n < 2) {\n        return n;\n    } else {\n        let p = 0, q = 0, r = 1;\n        for(var i = 2; i <= n; i ++) {\n            p = q;\n            q = r; \n            r = (p + q) % data;\n        }\n        return r;\n    }\n}\n")])])]),a("h2",{attrs:{id:"杨辉三角"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杨辉三角"}},[e._v("#")]),e._v(" 杨辉三角")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n")])])]),e._v(" "),a("comment-comment")],1)}),[],!1,null,null,null);t.default=n.exports}}]);