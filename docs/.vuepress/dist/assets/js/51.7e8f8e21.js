(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{468:function(n,a,e){"use strict";e.r(a);var t=e(27),u=Object(t.a)({},(function(){var n=this,a=n.$createElement,e=n._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h3",{attrs:{id:"前端精度丢失问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端精度丢失问题"}},[n._v("#")]),n._v(" 前端精度丢失问题")]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("加法运算，避免数据相加小数点后产生多位数和计算精度损失。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/** \n* @param num1加数1 | num2加数2 \n*/\nfunction numAdd(num1, num2) {\n    var baseNum, baseNum1, baseNum2;\n    try {\n        baseNum1 = num1.toString().split(".")[1].length;\n    } catch (e) {\n        baseNum1 = 0;\n    }\n    try {\n        baseNum2 = num2.toString().split(".")[1].length;\n    } catch (e) {\n        baseNum2 = 0;\n    }\n    baseNum = Math.pow(10, Math.max(baseNum1, baseNum2));\n    return (num1 * baseNum + num2 * baseNum) / baseNum;\n};\n')])])]),e("p",[n._v("减法运算，避免数据相减小数点后产生多位数和计算精度损失。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/** \n* @param num1被减数 | num2减数 \n*/\nfunction numSub(num1, num2) {\n    var baseNum, baseNum1, baseNum2;\n    var precision;// 精度 \n    try {\n        baseNum1 = num1.toString().split(".")[1].length;\n    } catch (e) {\n        baseNum1 = 0;\n    }\n    try {\n        baseNum2 = num2.toString().split(".")[1].length;\n    } catch (e) {\n        baseNum2 = 0;\n    }\n    baseNum = Math.pow(10, Math.max(baseNum1, baseNum2));\n    precision = (baseNum1 >= baseNum2) ? baseNum1 : baseNum2;\n    return ((num1 * baseNum - num2 * baseNum) / baseNum).toFixed(precision);\n};\n')])])]),e("p",[n._v("乘法运算，避免数据相乘小数点后产生多位数和计算精度损失。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/** \n* @param num1被乘数 | num2乘数 \n*/\nfunction numMulti(num1, num2) {\n    var baseNum = 0;\n    try {\n        baseNum += num1.toString().split(".")[1].length;\n    } catch (e) {\n    }\n    try {\n        baseNum += num2.toString().split(".")[1].length;\n    } catch (e) {\n    }\n    return Number(num1.toString().replace(".", "")) * Number(num2.toString().replace(".", "")) / Math.pow(10, baseNum);\n};\n')])])]),e("p",[n._v("除法运算，避免数据相除小数点后产生多位数和计算精度损失。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/** \n* @param num1被除数 | num2除数 \n*/\nfunction numDiv(num1, num2) {\n    var baseNum1 = 0, baseNum2 = 0;\n    var baseNum3, baseNum4;\n    try {\n        baseNum1 = num1.toString().split(".")[1].length;\n    } catch (e) {\n        baseNum1 = 0;\n    }\n    try {\n        baseNum2 = num2.toString().split(".")[1].length;\n    } catch (e) {\n        baseNum2 = 0;\n    }\n    with (Math) {\n        baseNum3 = Number(num1.toString().replace(".", ""));\n        baseNum4 = Number(num2.toString().replace(".", ""));\n        return (baseNum3 / baseNum4) * pow(10, baseNum2 - baseNum1);\n    }\n};\n')])])]),n._v(" "),e("comment-comment")],1)}),[],!1,null,null,null);a.default=u.exports}}]);