(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{436:function(a,e,t){"use strict";t.r(e);var s=t(56),n=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h3",{attrs:{id:"v-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[a._v("#")]),a._v(" v-model")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("数据双向绑定，本质是语法糖，背后的操作有两个：")]),a._v(" "),t("ul",[t("li",[a._v("v-bind绑定value；")]),a._v(" "),t("li",[a._v("v-on给当前元素绑定不同的事件；")])]),a._v(" "),t("blockquote",[t("p",[a._v("text和textarea绑定input事件；")]),a._v(" "),t("p",[a._v("checkbox、radio和select绑定change事件；")])]),a._v(" "),t("h4",{attrs:{id:"修饰符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修饰符"}},[a._v("#")]),a._v(" 修饰符")]),a._v(" "),t("ol",[t("li",[a._v(".lazy : change时更新\nv-model在每次input事件触发后将输入框的值与数据进行绑定，加上.lazy后转为在change事件之后进行同步")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<input v-model.lazy="msg">\n')])])]),t("ol",{attrs:{start:"2"}},[t("li",[a._v(".number : 输入值转为数值类型")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<input v-model.number="age" type="number">\n')])])]),t("p",[a._v("因为即使在type定义为number，HTML输入元素的值也会总会返回字符串。如果这个值无法被parseFloat()解析，则会返回原始的值。")]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v(".trim : 自动过滤首尾空格")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<input v-model.trim="msg">\n')])])]),t("h4",{attrs:{id:"自定义组件的v-model"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义组件的v-model"}},[a._v("#")]),a._v(" 自定义组件的v-model")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Vue.component('custom-checkbox', {\n    model: {\n        prop: 'checked',\n        event: 'change'\n    },\n    props: {\n        checked: Boolean\n    },\n    template: `\n        <input\n            type=\"checkbox\"\n            v-bind:checked=\"checked\"\n            v-on:change=\"$emit('change', $event.target.checked)\"\n        >\n    `\n})\n")])])]),t("h4",{attrs:{id:"sync修饰符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sync修饰符"}},[a._v("#")]),a._v(" .sync修饰符")]),a._v(" "),t("p",[t("strong",[a._v("作用：")]),a._v(" 可以实现子组件与父组件的双向绑定，并且可以实现子组件同步修改父组件的值。")]),a._v(" "),t("p",[t("strong",[a._v("本质：")]),a._v("\n正常父传子：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<son :a="a" :b="b"></son>\n')])])]),t("p",[a._v("加上.sync后父传子")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<son :a.sync="a" :b.sync="b"></son>\n')])])]),t("p",[a._v("它等价于")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<son\n    :a="a"\n    :b="b"\n    @update:a="val => a = val"\n    @update:b="val => b = val"\n></son>\n')])])]),t("p",[a._v("相当于多了一个事件监听，事件名为update:a, 回调函数中，会把接收到的值赋给属性绑定的数据项中。")]),a._v(" "),t("h4",{attrs:{id:"sync与v-model的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sync与v-model的区别"}},[a._v("#")]),a._v(" .sync与v-model的区别")]),a._v(" "),t("p",[t("strong",[a._v("相同点：")]),a._v(" 都是语法糖")]),a._v(" "),t("p",[t("strong",[a._v("不同点：")])]),a._v(" "),t("ul",[t("li",[a._v("格式写法不同，都可以实现父子组件的数据双向通信。")])]),a._v(" "),t("blockquote",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('v-model="num"\n:num.sync="num"\n\nv-model: @input + value\n:num.sync: @update:num \n')])])])]),a._v(" "),t("ul",[t("li",[a._v("v-model只能有一个，.sync可以有多个")])]),a._v(" "),t("comment-comment")],1)}),[],!1,null,null,null);e.default=n.exports}}]);