(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{469:function(e,t,v){"use strict";v.r(t);var a=v(27),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"如何保存页面当前的状态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何保存页面当前的状态"}},[e._v("#")]),e._v(" 如何保存页面当前的状态")]),e._v(" "),v("hr"),e._v(" "),v("p",[e._v("两种情况：组件会被卸载或不会被卸载")]),e._v(" "),v("h4",{attrs:{id:"组件会被卸载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件会被卸载"}},[e._v("#")]),e._v(" 组件会被卸载：")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("使用LocalStorage / SessionStorage")]),e._v(" "),v("p",[e._v("在组件即将销毁的生命周期（componentWillUnmount / beforeDestroy）使用此方法，需要注意的是组件更新状态的时机。")]),e._v(" "),v("p",[v("strong",[e._v("优点：")])]),e._v(" "),v("ul",[v("li",[e._v("兼容性好，不需要引入第三方库或者工具；")]),e._v(" "),v("li",[e._v("简单快捷，可以满足大部分需求；")])]),e._v(" "),v("p",[v("strong",[e._v("缺点：")])]),e._v(" "),v("ul",[v("li",[e._v("状态通过JSON存储（相当于深拷贝），如果状态中有特殊情况（Date对象/Regexp对象）会得到字符串而不是原来的值；")]),e._v(" "),v("li",[e._v("使用标示flag时，执行后退、下一页等操作会失效；")])])]),e._v(" "),v("li",[v("p",[e._v("路由传参")]),e._v(" "),v("p",[e._v("使用react-router的link，prop -- to 实现路由传递参数，通过history.location.state获取")]),e._v(" "),v("p",[v("strong",[e._v("优点：")])]),e._v(" "),v("ul",[v("li",[e._v("简单快捷，不会污染LocalStorage/SessionStorage;")]),e._v(" "),v("li",[e._v("可以存储Date对象和Regexp对象；（不用担心JSON.stringify()和parse()的不足）")])]),e._v(" "),v("p",[v("strong",[e._v("缺点：")])]),e._v(" "),v("ul",[v("li",[e._v("如果跳转页面过多，每个页面都需要使用同样的方法进行传值取值，相当冗余混乱；")])])])]),e._v(" "),v("h4",{attrs:{id:"组件不会被卸载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件不会被卸载"}},[e._v("#")]),e._v(" 组件不会被卸载：")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("单页面页面渲染")]),e._v(" "),v("p",[e._v("父子组件正常传参（prop）的方式")]),e._v(" "),v("p",[v("strong",[e._v("优点：")])]),e._v(" "),v("ul",[v("li",[e._v("代码量少，方便")])]),e._v(" "),v("p",[v("strong",[e._v("缺点：")])]),e._v(" "),v("ul",[v("li",[e._v("无法用路由定位页面")])])]),e._v(" "),v("li",[v("p",[e._v("keep-alive")]),e._v(" "),v("p",[e._v("<keep-alive> 包裹动态组件时，会缓存不活动的组件实例，而不是销毁他们。是一个抽象组件，它自身不会渲染一个组件，也不会出现在组件的父组件链中。")]),e._v(" "),v("p",[e._v("主要用于保存组件状态或避免重新渲染。")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v('<keep-alive>\n    <component :is="view"></component>\n</keep-alive>\n')])])]),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("<keep-alive>\n    <component v-if=\"$router.meta.keepAlive\"></component>\n</keep-alive>\n\n// router.js\n{\n    path: '/',\n    name: '',\n    component: () => import('./../src/XXX.vue'),\n    meta: {\n        keepAlive: true // 需要被缓存\n    }\n}\n")])])])])]),e._v(" "),v("comment-comment")],1)}),[],!1,null,null,null);t.default=n.exports}}]);