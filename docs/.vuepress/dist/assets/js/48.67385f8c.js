(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{466:function(t,e,n){"use strict";n.r(e);var a=n(27),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"异步加载的几种方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异步加载的几种方式"}},[t._v("#")]),t._v(" 异步加载的几种方式")]),t._v(" "),n("ol",[n("li",[t._v("defer: script被异步加载后并不会立即执行，而是等待文档被解析后执行。\n"),n("ul",[n("li",[t._v("只适用于外联脚本，如果script没有制定src属性，只是内联脚本，不要使用defer；")]),t._v(" "),n("li",[t._v("如果有多个声明了defer的sript，则会按顺序下载和执行；")]),t._v(" "),n("li",[t._v("defer脚本会在DOMContentLoader和load事件之前执行")])])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<script defer src=""><\/script>\n<script src="">defer<\/script>\n')])])]),n("ol",{attrs:{start:"2"}},[n("li",[t._v("async: html5为script元素定义的属性，只能异步加载外部的链接文件，不能加载内部脚本\n"),n("ul",[n("li",[t._v("在js文件加载完后立即执行；")]),t._v(" "),n("li",[t._v("如果有多个声明了async的脚本，其下载和执行也是异步的，不能确保彼此的先后顺序；")]),t._v(" "),n("li",[t._v("async会在load事件之前执行，但并不能确保与DOMContentLoaded的执行先后顺序")])])])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('<script src="" async><\/script>\n')])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("动态创建script标签，按需加载，节省资源，在需要用到的时候再去引入。")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function loadScript(url, callback) {\n    var script = document.createElement('script');\n    if(script.readyState) {\n        script.onreadystatechange = function() {\n            if(script.readyState == 'loaded' || script.readyState == 'complate') {\n                callback();\n            }\n        }\n    } else {\n        script.onload = function() {\n            callback();\n        }\n    }\n    script.url = url;\n    document.body.appendChild(script);\n}\n")])])]),n("h2",{attrs:{id:"防抖-debounce"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#防抖-debounce"}},[t._v("#")]),t._v(" 防抖（debounce）")]),t._v(" "),n("p",[t._v("不管事件的触发频率多高，一定在事件触发的 n 秒后才执行，如果你在事件触发后 n 秒内又触发了这个事件，那么以新的时间为准，n 秒后再执行。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function debounce(event, time) {\n    let timer = null;\n    return function(...args) {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            event.apply(this, args);\n        }, time);\n    }\n}\n")])])]),n("p",[t._v("有时候我们需要立即执行一次函数，再等后面事件触发后等待 n 秒执行，我们给 debounce 函数一个 flag 标示。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function debounce(event, time, flag) {\n    let timer = null;\n    return function(...args) {\n        clearTimeout(timer);\n        if(flag && !timer) {\n            event.apply(this, args);\n        }\n        timer = setTimeout(() => {\n            event.apply(this, args);\n        }, time);\n    }\n}\n")])])]),n("h2",{attrs:{id:"节流-throttle"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#节流-throttle"}},[t._v("#")]),t._v(" 节流（throttle）")]),t._v(" "),n("p",[t._v("不管事件的触发频率有多高，只在单位时间内执行一次。")]),t._v(" "),n("p",[t._v("时间戳和定时器结合，第一次和最后一次都会触发的版本。")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function throttle(event, time) {\n    let pre = 0; \n    let timer = null;\n    return function(...args) {\n        if(Date.now() - pre > time) {\n            clearTimeout(timer);\n            timer = null;\n            pre = Date.now();\n            event.apply(this, args);\n        } else if(!timer) {\n            timer = setTimeout(() => {\n                event.apply(this, args);\n            }, time);\n        }\n    }\n}\n")])])]),t._v(" "),n("comment-comment")],1)}),[],!1,null,null,null);e.default=r.exports}}]);