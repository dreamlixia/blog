(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{451:function(e,t,r){"use strict";r.r(t);var o=r(27),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h3",{attrs:{id:"使用object-defineproperty-进行数据劫持的缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用object-defineproperty-进行数据劫持的缺点"}},[e._v("#")]),e._v(" 使用Object.defineProperty()进行数据劫持的缺点")]),e._v(" "),r("hr"),e._v(" "),r("p",[e._v("在对一些属性进行操作时，这种方式无法拦截，比如通过下标修改数组或者给对象新增属性，都不能触发组件的重新渲染，因为Object.defineProperty()不能拦截这些操作。更精确地说，对于数组而言，大部分操作时拦截不到的，只是Vue通过内部重写函数的方式解决了这个问题。")]),e._v(" "),r("p",[e._v("Vue3.0中已经不使用这个方法了，而是通过Proxy对对象进行代理，从而实现数据劫持。使用Proxy的好处是它可以监听到任何方式的数据改变，唯一的缺点就是兼容性问题，Proxy是ES6的语法。")]),e._v(" "),r("comment-comment")],1)}),[],!1,null,null,null);t.default=n.exports}}]);